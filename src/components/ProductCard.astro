---
import IconType from './IconType.astro';

// src/components/ProductCard.astro
interface SizeType {
  size: string;
  stock: number;
}

interface Props {
  name: string;
  slug: string;
  images: string[];
  price?: number;
  type: string;
  discount: boolean;
  sizes?: SizeType[]; // Actualizado el tipo
  color?: string
}

const {
  name,
  slug,
  images,
  price = 0,
  type,
  discount,
  sizes = [],
  color = ''
} = Astro.props;
const image = images[0];
const formattedPrice = price.toLocaleString('es-ES');

const capitalizeFirstLetter = (str: string) => {
  return str.charAt(0).toUpperCase() + str.slice(1);
};
---

<article
  class="group bg-white rounded-lg overflow-hidden border border-gray-100 shadow-sm hover:shadow-md transition-all duration-300 will-change-transform"

>

  <div class="relative line-height-0">
    <a href={`/producto/${slug}`} class="block w-full h-full">
      <img
        loading="lazy"
        decoding="async"
        width="400"
        height="400"
        src={image}
        alt={name}
        class="w-full h-full object-contain transition-transform duration-300 hover:scale-105"
        style="display: block; margin: 0; line-height: 0;"
      />
    </a>

    <div class="absolute top-3 right-3 flex flex-row items-center gap-2">
      <!-- {type && <IconType type={type} />} -->
      {discount && <IconType type='discount' />}
    </div>
  </div>

  {/* Eliminamos la altura fija y añadimos padding adecuado */}
  <div class="p-4 flex flex-col">
    {/* Contenido centrado */}
    <div class="space-y-3 text-center">
      <h3
  class="font-semibold text-gray-800 text-lg leading-tight line-clamp-2"
  title={name}

>
  {name} - {color && capitalizeFirstLetter(color)}
</h3>

      <p
        class={`text-xl font-bold ${discount ? 'text-red-500' : 'text-gray-900'}`}

      > ${formattedPrice}</p>

      {/* Tallas centradas */}
      {sizes.length > 0 && (
        <div class="flex flex-wrap justify-center gap-2 mt-3">
          {sizes.map(({ size, stock }) => (
            <span
              class={`inline-flex items-center justify-center w-9 h-9 rounded-full text-sm font-medium transition-colors
                ${stock > 0
                  ? 'bg-gray-100 text-gray-900 hover:bg-gray-200'
                  : 'bg-gray-50 text-gray-400'}`}
              title={stock > 0 ? `Stock: ${stock}` : 'Sin stock'}
            >
              {size}
            </span>
          ))}
        </div>
      )}
    </div>

    {/* Añadimos margen superior al botón */}
    <a
      href={`/producto/${slug}`}
      class="mt-6 w-full text-center py-3 px-4 bg-gray-900 text-white text-sm font-medium rounded-lg
             hover:bg-gray-800 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900"
    >
      Ver Detalles
    </a>
  </div>
</article>